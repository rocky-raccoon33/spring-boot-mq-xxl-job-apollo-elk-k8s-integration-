kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: kube-app
  name: spring-app-initdb-pv-claim
  labels:
    app: spring-db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  namespace: kube-app
  name: spring-db
  labels:
    app: spring-db
spec:
  ports:
    - port: 3306
  selector:
    app: spring-db

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kube-app
  name: spring-db
spec:
  selector:
    matchLabels:
      app: spring-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: spring-db
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: martha
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-sql
          configMap:
            name: spring-app-init-sql

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: kube-app
  name: spring-app-init-sql
data:
  initdb.sql: |
    CREATE USER 'maurice'@'%' IDENTIFIED BY 'martha';
    GRANT ALL PRIVILEGES ON *.* TO 'maurice'@'%' WITH GRANT OPTION;
    flush privileges;
    CREATE database kube_app;
    use kube_app;
    DROP TABLE IF EXISTS `user`;
    
    CREATE TABLE user(
      id bigint primary key,
      name varchar(255) not null default ''
    );

---
apiVersion: v1
kind: Service
metadata:
  name: springboot-svc
  namespace: kube-app
spec:
  selector:
    app: spring-app
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app
  namespace: kube-app
spec:
  selector:
    matchLabels:
      app: spring-app
  replicas: 2
  template:
    metadata:
      labels:
        app: spring-app
    spec:
      containers:
        - name: spring-app
          image: spring-app:v1
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://spring-db:3306/kube_app
            - name: SPRING_DATASOURCE_USERNAME
              value: maurice
            - name: SPRING_DATASOURCE_PASSWORD
              value: martha
            - name: XXL_JOB_ADMIN_ADDRESS
              value: 'http://xxl-job:8080/xxl-job-admin'
            - name: APOLLO_META
              value: 'http://service-apollo-meta-server-dev:8080' 
            - name: XXL_JOB_ACCESSTOKEN
              value: ''
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_PORT
              value: '5672'
            - name: RABBITMQ_VIRTUALHOST
              value: "/"
            - name: RABBITMQ_USERNAME
              value: default_user_GNsAKcCpsAsOWi0-RZV
            - name: RABBITMQ_PASSWORD
              value: N7WsrDgOfYI6R29emNNjDNAGqxYkJ-1C
          imagePullPolicy: Never
          ports:
            - containerPort: 8080